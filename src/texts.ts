export const TXT_s_ALREADY_DECLARED =                      "'%s' is already declared"
export const TXT_ABSTRACT_CLASS_s_CANNOT_BE_INSTANTIATED = "Abstract class '%s' cannot be instantiated"
export const TXT_ACCESSING_PRIVATE_PROP_s =                "Accessing private property '%s' of parent class"
export const TXT_ARG_NOT_LVALUE =                          "Output argument expression is not assignable"
export const TXT_ATTR_s_INFORMED_MULTIPLE_TIMES =          "Attribute '%s' informed multiple times"
export const TXT_AUTO_NOT_ALLOWED =                        "Auto is not allowed here"

export const TXT_BOTH_MUST_BE_SAME =                     "Both expressions must have the same type"
export const TXT_BOTH_CONDITIONS_MUST_CALL_CONSTRUCTOR = "Both conditions must call constructor"
export const TEXT_BASE_DOESNT_HAVE_DEF_CONSTR =          "Base class doesn't have default constructor. Make explicit call to base constructor"

export const TXT_CANDIDATES_ARE =                         "Candidates are:"
export const TXT_CANNOT_CALL_CONSTRUCTOR_IN_LOOPS =       "Can't call a constructor in loops"
export const TXT_CANNOT_CALL_CONSTRUCTOR_IN_SWITCH =      "Can't call a constructor in switch"
export const TXT_CANNOT_CALL_CONSTRUCTOR_TWICE =          "Can't call a constructor multiple times"
export const TXT_CANNOT_CREATE_DELEGATE_FOR_NOREF_TYPES = "Can't create delegate for types that do not support handles"
export const TXT_CANNOT_IMPLEMENT_SELF =                  "Can't implement itself, or another interface that implements this interface"
export const TXT_CANNOT_INHERIT_FROM_s_FINAL =            "Can't inherit from class '%s' marked as final"
export const TXT_CANNOT_INHERIT_FROM_MULTIPLE_CLASSES =   "Can't inherit from multiple classes"
export const TXT_CANNOT_INHERIT_FROM_SELF =               "Can't inherit from itself, or another class that inherits from this class"
export const TXT_CANNOT_PASS_CLASS_METHOD_AS_ARG =        "Can't pass class method as arg directly. Use a delegate object instead"
export const TXT_CANNOT_RESOLVE_AUTO =                    "Unable to resolve auto type"
export const TXT_CANNOT_ACCESS_NON_STATIC_MEMBER_s =      "Cannot access non-static member '%s' like this"
export const TXT_CANNOT_RETURN_REF_TO_LOCAL =             "Can't return reference to local value."
export const TXT_CANT_CONSTRUCT_s_USE_REF_CAST =          "Can't construct handle '%s'. Use ref cast instead"
export const TXT_CANT_IMPLICITLY_CONVERT_s_TO_s =         "Can't implicitly convert from '%s' to '%s'."
export const TXT_CANT_RETURN_VALUE =                      "Can't return value when return type is 'void'"
export const TXT_CHANGE_SIGN =                            "Implicit conversion changed sign of value"
export const TXT_CLASS_CANT_BE_FINAL_AND_ABSTRACT =       "A class cannot be both abstract and final"
export const TXT_COMPILING_s =                            "Compiling %s"
export const TXT_COMPOUND_ASGN_ON_VALUE_TYPE =            "Compound assignments with property accessors on value types are not supported"
export const TXT_COMPOUND_ASGN_WITH_IDX_PROP =            "Compound assignments with indexed property accessors are not supported"
export const TXT_COMPOUND_ASGN_REQUIRE_GET_SET =          "Compound assignments with property accessors require both get and set accessors"
export const TXT_PROP_ACCESS_s_DOES_NOT_EXPECT_INDEX =    "Implemented property accessor '%s' does not expect index argument"
export const TXT_PROP_ACCESS_s_EXPECTS_INDEX =            "Implemented property accessor '%s' expects index argument"

export const TXT_DATA_TYPE_CANT_BE_s =                     "Data type can't be '%s'"
export const TXT_DECL_IN_SWITCH =                          "Variables cannot be declared in switch cases, except inside statement blocks"
export const TXT_DEFAULT_MUST_BE_LAST =                    "The default case must be the last one"
export const TXT_DEF_ARG_MISSING_IN_FUNC_s =               "All subsequent parameters after the first default value must have default values in function '%s'"
export const TXT_DEF_ARG_TYPE_DOESNT_MATCH =               "The type of the default argument expression doesn't match the function parameter type"
export const TXT_DUPLICATE_NAMED_ARG =                     "Duplicate named argument"
export const TXT_DERIVED_METHOD_MUST_HAVE_SAME_RETTYPE_s = "The method in the derived class must have the same return type as in the base class: '%s'"
export const TXT_DESTRUCTOR_MAY_NOT_HAVE_PARM =            "The destructor must not have any parameters"
export const TXT_DESTRUCTOR_s_s_NAME_ERROR =               "The name of the destructor '%s::~%s' must be the same as the class"
export const TXT_DISALLOW_ASSIGN_ON_REF_TYPE =             "Value assignment on reference types is not allowed. Did you mean to do a handle assignment?"
export const TXT_DISALLOW_COMPOUND_ASSIGN_ON_REF_TYPE =    "Compound assignment on reference types is not allowed"
export const TXT_DUPLICATE_SWITCH_CASE =                   "Duplicate switch case"

export const TXT_ELSE_WITH_EMPTY_STATEMENT =         "Else with empty statement"
export const TXT_EMPTY_LIST_ELEMENT_IS_NOT_ALLOWED = "Empty list element is not allowed"
export const TXT_EMPTY_SWITCH =                      "Empty switch statement"
export const TXT_EXPECTED_s =                        "Expected '%s'"
export const TXT_EXPECTED_CONSTANT =                 "Expected constant"
export const TXT_EXPECTED_DATA_TYPE =                "Expected data type"
export const TXT_EXPECTED_EXPRESSION_VALUE =         "Expected expression value"
export const TXT_EXPECTED_IDENTIFIER =               "Expected identifier"
export const TXT_EXPECTED_LIST =                     "Expected a list enclosed by { } to match pattern"
export const TXT_EXPECTED_METHOD_OR_PROPERTY =       "Expected method or property"
export const TXT_EXPECTED_ONE_OF =                   "Expected one of: "
export const TXT_EXPECTED_OPERATOR =                 "Expected operator"
export const TXT_EXPECTED_s_OR_s =                   "Expected '%s' or '%s'"
export const TXT_EXPECTED_POST_OPERATOR =            "Expected post operator"
export const TXT_EXPECTED_PRE_OPERATOR =             "Expected pre operator"
export const TXT_EXPECTED_STRING =                   "Expected string"
export const TXT_EXPR_DOESNT_EVAL_TO_FUNC =          "Expression doesn't evaluate to a function"
export const TXT_EXPR_MUST_BE_BOOL =                 "Expression must be of boolean type"
export const TXT_EXPR_s_IS_DATA_TYPE =               "Expression '%s' is a data type"
export const TXT_EXTERNAL_SHARED_s_NOT_FOUND =       "External shared entity '%s' not found"
export const TXT_EXTERNAL_SHARED_s_CANNOT_REDEF =    "External shared entity '%s' cannot redefine the original entity"

export const TXT_FAILED_TO_COMPILE_DEF_ARG_d_IN_FUNC_s = "Failed while compiling default arg for parameter %d in function '%s'"
export const TXT_FAILED_TO_CREATE_TEMP_OBJ =             "Previous error occurred while attempting to create a temporary copy of object"
export const TXT_FLOAT_CONV_TO_INT_CAUSE_TRUNC =         "Float value truncated in implicit conversion to integer"
export const TXT_FOUND_MULTIPLE_ENUM_VALUES =            "Found multiple matching enum values"
export const TXT_FUNCTION_ALREADY_EXIST =                "A function with the same name and parameters already exists"
export const TXT_FUNCTION_s_NOT_FOUND =                  "Function '%s' not found"

export const TXT_GET_SET_ACCESSOR_TYPE_MISMATCH_FOR_s = "The property '%s' has mismatching types for the get and set accessors"
export const TXT_GLOBAL_VARS_NOT_ALLOWED =              "Global variables have been disabled by the application"

export const TXT_HANDLE_ASSIGN_ON_NON_HANDLE_PROP =     "It is not allowed to perform a handle assignment on a non-handle property"
export const TXT_HANDLE_COMPARISON =                    "The operand is implicitly converted to handle in order to compare them"
export const TXT_HANDLE_OF_HANDLE_IS_NOT_ALLOWED =      "Handle to handle is not allowed"
export const TXT_s_HIDES_VAR_IN_OUTER_SCOPE =           "Variable '%s' hides another variable of same name in outer scope"

export const TXT_IDENTIFIER_s_NOT_DATA_TYPE =              "Identifier '%s' is not a data type"
export const TXT_IDENTIFIER_s_NOT_DATA_TYPE_IN_GLOBAL_NS = "Identifier '%s' is not a data type in global namespace"
export const TXT_IDENTIFIER_s_NOT_DATA_TYPE_IN_NS_s =      "Identifier '%s' is not a data type in namespace '%s' or parent"
export const TXT_IF_WITH_EMPTY_STATEMENT =                 "If with empty statement"
export const TXT_ILLEGAL_MEMBER_TYPE =                     "Illegal member type"
// TODO: Should be TXT_ILLEGAL_OPERATION_ON_s =
export const TXT_ILLEGAL_OPERATION =                      "Illegal operation on this datatype"
export const TXT_ILLEGAL_OPERATION_ON_s =                 "Illegal operation on '%s'"
export const TXT_ILLEGAL_TARGET_TYPE_FOR_REF_CAST =       "Illegal target type for reference cast"
export const TXT_ILLEGAL_VARIABLE_NAME_s =                "Illegal variable name '%s'."
export const TXT_INHERITED_PRIVATE_PROP_ACCESS_s =        "Illegal access to inherited private property '%s'"
export const TXT_INIT_LIST_CANNOT_BE_USED_WITH_s =        "Initialization lists cannot be used with '%s'"
export const TXT_INSTANCING_INVLD_TMPL_TYPE_s_s =         "Attempting to instantiate invalid template type '%s<%s>'"
export const TXT_INSTEAD_FOUND_s =                        "Instead found '%s'"
export const TXT_INSTEAD_FOUND_IDENTIFIER_s =             "Instead found identifier '%s'"
export const TXT_INSTEAD_FOUND_KEYWORD_s =                "Instead found reserved keyword '%s'"
export const TXT_INTERFACE_s_CANNOT_BE_INSTANTIATED =     "Interface '%s' cannot be instantiated"
export const TXT_INTERFACE_CAN_ONLY_IMPLEMENT_INTERFACE = "Interfaces can only implement other interfaces"
export const TXT_INVALID_BREAK =                          "Invalid 'break'"
export const TXT_INVALID_CHAR_LITERAL =                   "Invalid character literal"
export const TXT_INVALID_CONTINUE =                       "Invalid 'continue'"
export const TXT_INVALID_ESCAPE_SEQUENCE =                "Invalid escape sequence"
export const TXT_INVALID_EXPRESSION_AMBIGUOUS_NAME =      "Invalid expression: ambiguous name"
export const TXT_INVALID_EXPRESSION_LAMBDA =              "Invalid expression: stand-alone anonymous function"
export const TXT_INVALID_OP_ON_METHOD =                   "Invalid operation on method"
export const TXT_INVALID_REF_PROP_ACCESS =                "Invalid reference. Property accessors cannot be used in combined read/write operations"
export const TXT_INVALID_SCOPE =                          "Invalid scope resolution"
export const TXT_INVALID_SIG_FOR_VIRTPROP =               "Invalid signature for virtual property"
export const TXT_INVALID_TYPE =                           "Invalid type"
export const TXT_INVALID_UNICODE_FORMAT_EXPECTED_d =      "Invalid unicode escape sequence, expected %d hex digits"
export const TXT_INVALID_UNICODE_VALUE =                  "Invalid unicode code point"
export const TXT_INVALID_UNICODE_SEQUENCE_IN_SRC =        "Invalid unicode sequence in source"
export const TXT_INVALID_USE_OF_NAMED_ARGS =              "Invalid use of named arguments"

export const TXT_METHOD_CANNOT_OVERRIDE_s =                "Method '%s' declared as final and cannot be overridden"
export const TXT_METHOD_CANT_HAVE_NAME_OF_CLASS =          "The method cannot be named with the class name"
export const TXT_METHOD_s_DOES_NOT_OVERRIDE =              "Method '%s' marked as override but does not replace any base class or interface method"
export const TXT_METHOD_s_s_HAS_NO_RETURN_TYPE =           "Method '%s::%s' is missing the return type, nor is it the same name as object to be a constructor"
export const TXT_METHOD_s_NOT_PART_OF_OBJECT_s =           "Method '%s' is not part of object '%s'"
export const TXT_MISSING_IMPLEMENTATION_OF_s =             "Missing implementation of '%s'"
export const TXT_MISSING_DEFINITION_OF_s =                 "Missing definition of '%s'"
export const TXT_MIXIN_CANNOT_BE_DECLARED_AS_s =           "Mixin class cannot be declared as '%s'"
export const TXT_MIXIN_CANNOT_HAVE_CONSTRUCTOR =           "Mixin classes cannot have constructors or destructors"
export const TXT_MIXIN_CLASS_CANNOT_INHERIT =              "Mixin class cannot inherit from classes"
export const TXT_MIXIN_CANNOT_HAVE_CHILD_TYPES =           "Mixin classes cannot have child types"
export const TXT_MORE_THAN_ONE_MATCHING_OP =               "Found more than one matching operator"
export const TXT_MULTIPLE_MATCHING_SIGNATURES_TO_s =       "Multiple matching signatures to '%s'"
export const TXT_MULTIPLE_PROP_GET_ACCESSOR_FOR_s =        "Found multiple get accessors for property '%s'"
export const TXT_MULTIPLE_PROP_SET_ACCESSOR_FOR_s =        "Found multiple set accessors for property '%s'"
export const TXT_MULTILINE_STRINGS_NOT_ALLOWED =           "Multiline strings are not allowed in this application"
export const TXT_MUST_BE_OBJECT =                          "Only objects have constructors"
export const TXT_MUST_RETURN_VALUE =                       "Must return a value"

export const TXT_NAMESPACE_s_DOESNT_EXIST =               "Namespace '%s' doesn't exist."
export const TXT_NAME_CONFLICT_s_EXTENDED_TYPE =          "Name conflict. '%s' is an extended data type."
export const TXT_NAME_CONFLICT_s_GLOBAL_PROPERTY =        "Name conflict. '%s' is a global property."
export const TXT_NAME_CONFLICT_s_IS_NAMED_TYPE =          "Name conflict. '%s' is a named type."
export const TXT_NAME_CONFLICT_s_IS_FUNCDEF =             "Name conflict. '%s' is a funcdef."
export const TXT_NAME_CONFLICT_s_IS_FUNCTION =            "Name conflict. '%s' is a global function."
export const TXT_NAME_CONFLICT_s_IS_MIXIN =               "Name conflict. '%s' is a mixin class."
export const TXT_NAME_CONFLICT_s_IS_VIRTPROP =            "Name conflict. '%s' is a virtual property."
export const TXT_NAME_CONFLICT_s_STRUCT =                 "Name conflict. '%s' is a class."
export const TXT_NAME_CONFLICT_s_OBJ_PROPERTY =           "Name conflict. '%s' is an object property."
export const TXT_NAME_CONFLICT_s_METHOD =                 "Name conflict. '%s' is a class method."
export const TXT_NAME_CONFLICT_s_ALREADY_USED =           "Name conflict. '%s' is already used."
export const TXT_NAMED_ARGS_WITH_OLD_SYNTAX =             "Detected named argument with old syntax"
export const TXT_NO_APPROPRIATE_INDEX_OPERATOR =          "No appropriate indexing operator found"
export const TXT_NO_APPROPRIATE_OPHNDLASSIGN_s =          "No appropriate opHndlAssign method found in '%s' for handle assignment"
export const TXT_NO_APPROPRIATE_OPEQUALS =                "No appropriate opEquals method found"
export const TXT_NO_CONVERSION_s_TO_s =                   "No conversion from '%s' to '%s' available."
export const TXT_NO_CONVERSION_s_TO_MATH_TYPE =           "No conversion from '%s' to math type available."
export const TXT_NO_DEFAULT_ARRAY_TYPE =                  "The application doesn't support the default array type."
export const TXT_NO_DEFAULT_CONSTRUCTOR_FOR_s =           "No default constructor for object of type '%s'."
export const TXT_NO_DEFAULT_COPY_OP_FOR_s =               "No appropriate opAssign method found in '%s' for value assignment"
export const TXT_NO_COPY_CONSTRUCTOR_FOR_s =              "No copy constructor for object of type '%s'."
export const TXT_NO_MATCHING_SIGNATURES_TO_s =            "No matching signatures to '%s'"
export const TXT_NO_MATCHING_OP_FOUND_FOR_TYPE_s =        "No matching operator that takes the type '%s' found"
export const TXT_NO_MATCHING_OP_FOUND_FOR_TYPES_s_AND_s = "No matching operator that takes the types '%s' and '%s' found"
export const TXT_NO_MATCHING_SYMBOL_s =                   "No matching symbol '%s'"
export const TXT_NON_CONST_METHOD_ON_CONST_OBJ =          "Non-const method call on read-only object reference"
export const TXT_NONTERMINATED_STRING =                   "Non-terminated string literal"
export const TXT_NOT_A_FUNC_s_IS_TYPE_s =                 "Expression doesn't form a function call. '%s' evaluates to the non-function type '%s'"
export const TXT_NOT_ALL_PATHS_RETURN =                   "Not all paths return a value"
export const TXT_NOT_ENOUGH_VALUES_FOR_LIST =             "Not enough values to match pattern"
export const TXT_s_NOT_DECLARED =                         "'%s' is not declared"
export const TXT_NOT_EXACT =                              "Implicit conversion of value is not exact"
export const TXT_s_NOT_INITIALIZED =                      "'%s' is not initialized."
export const TXT_NOT_LVALUE =                             "Expression is not an l-value"
export const TXT_s_NOT_MEMBER_OF_s =                      "'%s' is not a member of '%s'"
export const TXT_NOT_VALID_REFERENCE =                    "Not a valid reference"
export const TXT_NOT_VALID_LVALUE =                       "Not a valid lvalue"
export const TXT_NOTHING_WAS_BUILT =                      "Nothing was built in the module"

export const TXT_OBJECT_DOESNT_SUPPORT_INDEX_OP =          "Type '%s' doesn't support the indexing operator"
export const TXT_OBJECT_HANDLE_NOT_SUPPORTED =             "Object handle is not supported for this type"
export const TXT_ONLY_OBJECTS_MAY_USE_REF_INOUT =          "Only object types that support object handles can use &inout. Use &in or &out instead"
export const TXT_ONLY_ONE_ARGUMENT_IN_CAST =               "A cast operator has one argument"
export const TXT_ONLY_ONE_FUNCTION_ALLOWED =               "The code must contain one and only one function"
export const TXT_ONLY_ONE_VARIABLE_ALLOWED =               "The code must contain one and only one global variable"
export const TXT_OPERANDS_MUST_BE_HANDLES =                "Both operands must be handles when comparing identity"
export const TXT_OVERLOAD_CONFLICTS_DUE_TO_DEFAULT_ARGS =  "The overloaded functions are identical on initial parameters without default arguments"

export const TXT_PARAMETER_ALREADY_DECLARED =            "Parameter already declared"
export const TXT_PARAMETER_CANT_BE_s =                   "Parameter type can't be '%s', because the type cannot be instantiated."
export const TXT_POS_ARG_AFTER_NAMED_ARG =               "Positional arguments cannot be passed after named arguments"
export const TXT_PREV_ERROR_WHILE_COMP_LIST_FOR_TYPE_s = "Previous error occurred while attempting to compile initialization list for type '%s'"
export const TXT_PRIVATE_METHOD_CALL_s =                 "Illegal call to private method '%s'"
export const TXT_PRIVATE_PROP_ACCESS_s =                 "Illegal access to private property '%s'"
export const TXT_PROTECTED_METHOD_CALL_s =               "Illegal call to protected method '%s'"
export const TXT_PROTECTED_PROP_ACCESS_s =               "Illegal access to protected property '%s'"
export const TXT_PROP_ACCESS_WITH_INDEX_ONE_ARG =        "Property accessor with index must have 1 and only 1 index argument"
export const TXT_PROPERTY_ACCESSOR_DISABLED =            "Property accessors have been disabled by the application"
export const TXT_PROPERTY_ACCESSOR_MUST_BE_IMPLEMENTED = "Property accessor must be implemented"
export const TXT_PROPERTY_CANT_BE_CONST =                "Class properties cannot be declared as const"
export const TXT_PROPERTY_HAS_NO_GET_ACCESSOR =          "The property has no get accessor"
export const TXT_PROPERTY_HAS_NO_SET_ACCESSOR =          "The property has no set accessor"
export const TXT_PROPERTY_WITHOUT_ACCESSOR =             "Virtual property must have at least one get or set accessor"

export const TXT_REF_CANT_BE_TO_LOCAL_VAR =            "Resulting reference cannot be returned. Returned references must not refer to local variables."
export const TXT_REF_CANT_BE_RETURNED_DEFERRED_PARAM = "Resulting reference cannot be returned. There are deferred arguments that may invalidate it."
export const TXT_REF_CANT_BE_RETURNED_LOCAL_VARS =     "Resulting reference cannot be returned. The expression uses objects that during cleanup may invalidate it."
export const TXT_REF_IS_READ_ONLY =                    "Reference is read-only"
export const TXT_REF_IS_TEMP =                         "Reference is temporary"
export const TXT_REF_TYPE_CANT_BE_PASSED_BY_VAL =      "Reference types cannot be passed by value in function parameters"
export const TXT_REF_TYPE_CANT_BE_RETURNED_BY_VAL =    "Reference types cannot be returned by value from functions"
export const TXT_RETURN_CANT_BE_s =                    "Return type can't be '%s'"

export const TXT_SHARED_CANNOT_ACCESS_NON_SHARED_VAR_s =      "Shared code cannot access non-shared global variable '%s'"
export const TXT_SHARED_CANNOT_CALL_NON_SHARED_FUNC_s =       "Shared code cannot call non-shared function '%s'"
export const TXT_SHARED_CANNOT_IMPLEMENT_NON_SHARED_s =       "Shared type cannot implement non-shared interface '%s'"
export const TXT_SHARED_CANNOT_INHERIT_FROM_NON_SHARED_s =    "Shared class cannot inherit from non-shared class '%s'"
export const TXT_SHARED_CANNOT_USE_NON_SHARED_TYPE_s =        "Shared code cannot use non-shared type '%s'"
export const TXT_SHARED_s_DOESNT_MATCH_ORIGINAL =             "Shared type '%s' doesn't match the original declaration in other module"
export const TXT_SECTION_IS_EMPTY =                           "The script section is empty"
export const TXT_SIGNED_UNSIGNED_MISMATCH =                   "Signed/Unsigned mismatch"
export const TXT_STRINGS_NOT_RECOGNIZED =                     "Strings are not recognized by the application"
export const TXT_SWITCH_CASE_MUST_BE_CONSTANT =               "Case expressions must be constants"
export const TXT_SWITCH_MUST_BE_INTEGRAL =                    "Switch expressions must be integral numbers"

export const TXT_TMPL_s_EXPECTS_d_SUBTYPES =          "Template '%s' expects %d sub type(s)"
export const TXT_TMPL_SUBTYPE_MUST_NOT_BE_READ_ONLY = "Template subtype must not be read-only"
export const TXT_TOO_MANY_JUMP_LABELS =               "The function has too many jump labels to handle. Split the function into smaller ones."
export const TXT_TOO_MANY_VALUES_FOR_LIST =           "Too many values to match pattern"
export const TXT_TYPE_s_CANNOT_BE_REFERENCE =         "Type '%s' cannot be a reference"
export const TXT_TYPE_s_NOT_AVAILABLE_FOR_MODULE =    "Type '%s' is not available for this module"
export const TXT_TYPE_s_NOT_TEMPLATE =                "Type '%s' is not a template type"

export const TXT_UNEXPECTED_END_OF_FILE =             "Unexpected end of file"
export const TXT_UNEXPECTED_TOKEN_s =                 "Unexpected token '%s'"
export const TXT_UNEXPECTED_VAR_DECL =                "Unexpected variable declaration"
export const TXT_UNINITIALIZED_GLOBAL_VAR_s =         "Use of uninitialized global variable '%s'."
export const TXT_UNKNOWN_SCOPE_s =                    "Unknown scope '%s'"
export const TXT_UNREACHABLE_CODE =                   "Unreachable code"
export const TXT_UNRECOGNIZED_VIRTUAL_PROPERTY_NODE = "Virtual property contains unrecognized aspect"
export const TXT_UNUSED_SCRIPT_NODE =                 "Unused script node"

export const TXT_VALUE_TOO_LARGE_FOR_TYPE =      "Value is too large for data type"
export const TXT_VOID_CANT_BE_OPERAND =          "Void cannot be an operand in expressions"

export const TXT_WARNINGS_TREATED_AS_ERROR =     "Warnings are treated as errors by the application"
export const TXT_WHERE_s_IS_s =                  "Where '%s' is '%s'"
export const TXT_WHILE_PARSING_ARG_LIST =        "While parsing argument list"
export const TXT_WHILE_PARSING_EXPRESSION =      "While parsing expression"
export const TXT_WHILE_PARSING_INIT_LIST =       "While parsing initialization list"
export const TXT_WHILE_PARSING_NAMESPACE =       "While parsing namespace"
export const TXT_WHILE_PARSING_STATEMENT_BLOCK = "While parsing statement block"
export const TXT_WHILE_INCLUDING_MIXIN =         "Previous error occurred while including mixin"

// Global variable initialization

export const TXT_FAILED_TO_INITIALIZE_s =      "Failed to initialize global variable '%s'"
export const TXT_EXCEPTION_s_IN_s =            "Exception '%s' in '%s'"

// Engine message

export const TXT_AUTOHANDLE_CANNOT_BE_USED_FOR_NOCOUNT =        "Autohandles cannot be used with types that have been registered with NOCOUNT"
export const TXT_FIRST_PARAM_MUST_BE_REF_FOR_TEMPLATE_FACTORY = "First parameter to template factory must be a reference. This will be used to pass the object type of the template"
export const TXT_INVALID_CONFIGURATION =                        "Invalid configuration. Verify the registered application interface."
export const TXT_VALUE_TYPE_MUST_HAVE_SIZE =                    "A value type must be registered with a non-zero size"
export const TXT_TYPE_s_IS_MISSING_BEHAVIOURS =                 "Type '%s' is missing behaviours"
export const TXT_ILLEGAL_BEHAVIOUR_FOR_TYPE =                   "The behaviour is not compatible with the type"
export const TXT_GC_REQUIRE_ADD_REL_GC_BEHAVIOUR =              "A garbage collected ref type must have the addref, release, and all gc behaviours"
export const TXT_VALUE_GC_REQUIRE_GC_BEHAVIOUR =                "A garbage collected value type must have the gc enum references behaviour"
export const TXT_SCOPE_REQUIRE_REL_BEHAVIOUR =                  "A scoped reference type must have the release behaviour"
export const TXT_REF_REQUIRE_ADD_REL_BEHAVIOUR =                "A reference type must have the addref and release behaviours"
export const TXT_NON_POD_REQUIRE_CONSTR_DESTR_BEHAVIOUR =       "A non-pod value type must have at least one constructor and the destructor behaviours"
export const TXT_CANNOT_PASS_TYPE_s_BY_VAL =                    "Can't pass type '%s' by value unless the application type is informed in the registration"
export const TXT_CANNOT_RET_TYPE_s_BY_VAL =                     "Can't return type '%s' by value unless the application type is informed in the registration"
// TODO: Should be something like "This platform requires that AngelScript knows the exact content of the type '%s' in order to pass by value to application in native calling convention"
export const TXT_DONT_SUPPORT_TYPE_s_BY_VAL =                   "Don't support passing type '%s' by value to application in native calling convention on this platform"
// TODO: Should be something like "This platform requires that AngelScript knows the exact content of the type '%s' in order to return by value from application in native calling convention"
export const TXT_DONT_SUPPORT_RET_TYPE_s_BY_VAL =               "Don't support returning type '%s' by value from application in native calling convention on this platform"
export const TXT_d_GC_CANNOT_FREE_OBJ_OF_TYPE_s =               "Object {%d}. GC cannot destroy an object of type '%s' as it doesn't know how many references to there are."
export const TXT_d_GC_CANNOT_FREE_OBJ_OF_TYPE_s_REF_COUNT_d =   "Object {%d}. GC cannot destroy an object of type '%s' as it can't see all references. Current ref count is %d."
export const TXT_OBJECT_TYPE_s_DOESNT_EXIST =                   "Object type '%s' doesn't exist"
export const TXT_TEMPLATE_s_ALREADY_GENERATED_CANT_REGISTER =   "Cannot register. The template type instance '%s' has already been generated."
export const TXT_TEMPLATE_TYPE_s_DOESNT_EXIST =                 "Template type '%s' doesn't exist"
export const TXT_TEMPLATE_SUBTYPE_s_DOESNT_EXIST =              "Template subtype '%s' doesn't exist"
export const TXT_TEMPLATE_LIST_FACTORY_EXPECTS_2_REF_PARAMS =   "Template list factory expects two reference parameters. The last is the pointer to the initialization buffer"
export const TXT_LIST_FACTORY_EXPECTS_1_REF_PARAM =             "List factory expects only one reference parameter. The pointer to the initialization buffer will be passed in this parameter"
export const TXT_FAILED_READ_SUBTYPE_OF_TEMPLATE_s =            "Failed to read subtype of template type '%s'"
export const TXT_FAILED_IN_FUNC_s_s_d =                           "Failed in call to function '%s' (Code: %s, %d)"
export const TXT_FAILED_IN_FUNC_s_WITH_s_s_d =                    "Failed in call to function '%s' with '%s' (Code: %s, %d)"
export const TXT_FAILED_IN_FUNC_s_WITH_s_AND_s_s_d =              "Failed in call to function '%s' with '%s' and '%s' (Code: %s, %d)"
export const TXT_GC_RECEIVED_NULL_PTR =                         "AddScriptObjectToGC called with null pointer"
export const TXT_EXCEPTION_IN_NESTED_CALL =                     "An exception occurred in a nested call"
export const TXT_TYPE_s_IS_STILL_USED_BY_FUNC_s =               "Type '%s' is still used by function '%s'"
export const TXT_PREV_TYPE_IS_NAMED_s =                         "The builtin type in previous message is named '%s'"
export const TXT_PREV_FUNC_IS_NAMED_s_TYPE_IS_d =               "The function in previous message is named '%s'. The func type is %d"
export const TXT_RESURRECTING_SCRIPTOBJECT_s =                  "The script object of type '%s' is being resurrected illegally during destruction"
export const TXT_INVALID_BYTECODE_d =                           "LoadByteCode failed. The bytecode is invalid. Number of bytes read from stream: %d"
export const TXT_NO_JIT_IN_FUNC_s =                             "Function '%s' appears to have been compiled without JIT entry points"
export const TXT_ENGINE_REF_COUNT_ERROR_DURING_SHUTDOWN =       "Uh oh! The engine's reference count is increasing while it is being destroyed. Make sure references needed for clean-up are immediately released"
export const TXT_MODULE_IS_IN_USE =                             "The module is still in use and cannot be rebuilt. Discard it and request another module"
export const TXT_EXTRNL_REF_TO_MODULE_s =                       "There is an external reference to an object in module '%s', preventing it from being deleted"

// Internal names

export const TXT_PROPERTY =                      "Property"
export const TXT_SYSTEM_FUNCTION =               "System function"
export const TXT_VARIABLE_DECL =                 "Variable declaration"

// Exceptions

export const TXT_STACK_OVERFLOW =                "Stack overflow"
export const TXT_NULL_POINTER_ACCESS =           "Null pointer access"
export const TXT_DIVIDE_BY_ZERO =                "Divide by zero"
export const TXT_DIVIDE_OVERFLOW =               "Overflow in integer division"
export const TXT_POW_OVERFLOW =                  "Overflow in exponent operation"
export const TXT_UNRECOGNIZED_BYTE_CODE =        "Unrecognized byte code"
export const TXT_INVALID_CALLING_CONVENTION =    "Invalid calling convention"
export const TXT_UNBOUND_FUNCTION =              "Unbound function called"
export const TXT_OUT_OF_BOUNDS =                 "Out of range"
export const TXT_EXCEPTION_CAUGHT =              "Caught an exception from the application"
export const TXT_MISMATCH_IN_VALUE_ASSIGN =      "Mismatching types in value assignment"
export const TXT_TOO_MANY_NESTED_CALLS =         "Too many nested calls"
